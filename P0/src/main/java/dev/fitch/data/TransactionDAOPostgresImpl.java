package dev.fitch.data;

import dev.fitch.entities.Account;
import dev.fitch.entities.Transaction;
import dev.fitch.utilities.*;

import java.sql.*;
import java.text.DecimalFormat;

public class TransactionDAOPostgresImpl implements TransactionDAO{

    @Override
    public Transaction newTransaction(Transaction transaction) {

        try {
            Connection conn = ConnectionUtil.createConnection();
            String sql = "insert into transactionlog values (default,?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            ps.setInt(1, transaction.getAccountNumber());
            ps.setLong(2, transaction.getDate());
            ps.setString(3, transaction.getTransactionType());
            ps.setDouble(4, transaction.getAmount());
            ps.setDouble(5, transaction.getNewBalance());

            ps.execute();

            ResultSet rs = ps.getGeneratedKeys(); //Get the Transaction Number generated by the DB
            rs.next(); //Move to the first record
            int generatedTN = rs.getInt("transaction_number");
            transaction.setTransactionNumber(generatedTN);

            return transaction;

        } catch (SQLException e) {
            e.printStackTrace();
            Logger.log(e.getMessage(), LogLevel.ERROR);
            return null;
        }
    }

    @Override
    public List<Transaction> listTransactions(int account) {
        try {
            Connection conn = ConnectionUtil.createConnection();
            String sql = "select * from transactionlog where account_number = '" + account + "';";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            List<Transaction> transactions = new ArrayList();
            while (rs.next()) {
                Transaction transaction = new Transaction();

                transaction.setTransactionNumber(rs.getInt("transaction_number"));
                transaction.setAccountNumber(rs.getInt("account_number"));
                transaction.setDate(rs.getLong("transaction_date"));
                transaction.setTransactionType(rs.getString("transaction_type"));
                transaction.setAmount(rs.getDouble("amount"));
                transaction.setNewBalance(rs.getDouble("new_balance"));

                transactions.add(transaction);
            }

            return transactions;

        } catch (SQLException e) {
            e.printStackTrace();
            Logger.log(e.getMessage(), LogLevel.ERROR);
            return null;
        }
    }
}
